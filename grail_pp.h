#define GRAIL_PP_PRAGMA(x) _Pragma(#x)
#define GRAIL_PP_REVIVE(m) GRAIL_PP_PRAGMA(push_macro(#m))GRAIL_PP_PRAGMA(pop_macro(#m))

#define GRAIL_PP_PSTR(x...) #x
#define GRAIL_PP_STR(x...) GRAIL_PP_PSTR(x)

#define GRAIL_PP_EAT(...)
#define GRAIL_PP_SCAN(x...) GRAIL_PP_REVIVE(GRAIL_PP_SCAN) x
#define GRAIL_PP_EMPTY

#define GRAIL_PP_TUPLE_AT_0(P,a,...) P##a
#define GRAIL_PP_TUPLE_AT_2(P,a,b,c,...) P##c

#define GRAIL_PP_IF_(P,c,v...) P##v
#define GRAIL_PP_IF_0(P,c,v...) P##v
#define GRAIL_PP_IF_1(P,c,...) P##c

#define GRAIL_PP_IS_NIL_TEST(x...) ,##x

#define GRAIL_PP_IS_NIL(P,x) GRAIL_PP_SCAN(GRAIL_PP_TUPLE_AT_2 GRAIL_PP_EAT() (GRAIL_PP_IF_,GRAIL_PP_IS_NIL_TEST(x),0,1))

#define GRAIL_PP_IS_EMPTY_VA_ARGS(P...) GRAIL_PP_SCAN(GRAIL_PP_TUPLE_AT_0 GRAIL_PP_EMPTY (GRAIL_PP_IF_,,##P 1))

#define GRAIL_PP_LEFT(P,x...) P##x

#define GRAIL_PP_SEQ_HEAD(P,s) GRAIL_PP_SCAN(GRAIL_PP_TUPLE_AT_0 GRAIL_PP_EMPTY (,GRAIL_PP_X_COMMA P##s))
#define GRAIL_PP_X_COMMA(x...) GRAIL_PP_LEFT(,##x),


#define GRAIL_PP_SEQ_FOREACH(P,f,s) GRAIL_PP_IS_EMPTY_VA_ARGS(s) (GRAIL_PP_SEQ_FOREACH_,STOP,LOOP) (,P##f,P##s)

#define GRAIL_PP_SEQ_FOREACH_LOOP(P,f,s) \
GRAIL_PP_REVIVE(GRAIL_PP_SEQ_FOREACH) \
GRAIL_PP_REVIVE(GRAIL_PP_SEQ_FOREACH_LOOP) \
GRAIL_PP_REVIVE(GRAIL_PP_SEQ_FOREACH_STOP) \
P##f (GRAIL_PP_SEQ_HEAD (,s)) \
GRAIL_PP_SCAN(GRAIL_PP_SEQ_FOREACH GRAIL_PP_EMPTY (,f,GRAIL_PP_EAT s))

#define GRAIL_PP_SEQ_FOREACH_STOP(P,f,_)


#define GRAIL_PP_FOLD_ARGS(f, x, args...) GRAIL_PP_IS_EMPTY_VA_ARGS(args) (GRAIL_PP_FOLD_ARGS_,STOP,LOOP) (f,x,args)

#define GRAIL_PP_FOLD_ARGS_LOOP(f,x,args...) \
GRAIL_PP_REVIVE (GRAIL_PP_FOLD_ARGS) \
GRAIL_PP_REVIVE (GRAIL_PP_FOLD_ARGS_LOOP) \
GRAIL_PP_REVIVE (GRAIL_PP_FOLD_ARGS_STOP) \
f (GRAIL_PP_FOLD_ARGS (f,args),x)

#define GRAIL_PP_FOLD_ARGS_STOP(f,x,...) x


#define GRAIL_PP_MAP_ARGS(f,x,args...) GRAIL_PP_IS_EMPTY_VA_ARGS(args) (GRAIL_PP_MAP_ARGS_,STOP,LOOP) (f,x,args)

#define GRAIL_PP_MAP_ARGS_LOOP(f,x,args...) \
GRAIL_PP_REVIVE(GRAIL_PP_MAP_ARGS) \
GRAIL_PP_REVIVE(GRAIL_PP_MAP_ARGS_LOOP) \
GRAIL_PP_REVIVE(GRAIL_PP_MAP_ARGS_STOP) \
f (x),GRAIL_PP_MAP_ARGS(f,args)

#define GRAIL_PP_MAP_ARGS_STOP(f,x,...) f(x)
